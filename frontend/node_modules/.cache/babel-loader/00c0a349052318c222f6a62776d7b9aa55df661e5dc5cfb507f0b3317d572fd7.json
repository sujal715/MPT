{"ast":null,"code":"import apiService from'./api';// Fallback data for when backend is not available\nconst fallbackPackages=[{packageId:1,packageName:\"Basic Package\",price:99.99,duration:\"1 hour\",description:\"Perfect for beginners\",features:[\"Personal training session\",\"Fitness assessment\",\"Basic workout plan\"]},{packageId:2,packageName:\"Premium Package\",price:199.99,duration:\"2 hours\",description:\"Great for regular fitness enthusiasts\",features:[\"Extended training session\",\"Nutrition guidance\",\"Progress tracking\"]},{packageId:3,packageName:\"Deluxe Package\",price:299.99,duration:\"3 hours\",description:\"Comprehensive fitness solution\",features:[\"Full day program\",\"Meal planning\",\"24/7 support\"]}];export const packagesService={// Get all packages\nasync getAllPackages(){try{return await apiService.get('/packages');}catch(error){console.log('Using fallback packages data due to API error:',error.message);return{success:true,data:fallbackPackages};}},// Get package by ID\nasync getPackageById(id){try{return await apiService.get(\"/packages/\".concat(id));}catch(error){console.log('Using fallback package data due to API error:',error.message);const pkg=fallbackPackages.find(p=>p.packageId===parseInt(id));return pkg?{success:true,data:pkg}:{success:false,error:'Package not found'};}},// Create new package\nasync createPackage(packageData){try{return await apiService.post('/packages',packageData);}catch(error){console.log('Package creation failed due to API error:',error.message);return{success:false,error:'Package creation failed - using fallback mode'};}},// Update package\nasync updatePackage(id,packageData){try{return await apiService.put(\"/packages/\".concat(id),packageData);}catch(error){console.log('Package update failed due to API error:',error.message);return{success:false,error:'Package update failed - using fallback mode'};}},// Delete package\nasync deletePackage(id){try{return await apiService.delete(\"/packages/\".concat(id));}catch(error){console.log('Package deletion failed due to API error:',error.message);return{success:false,error:'Package deletion failed - using fallback mode'};}},// Get packages by category\nasync getPackagesByCategory(category){try{return await apiService.get(\"/packages/category/\".concat(category));}catch(error){console.log('Using fallback packages by category due to API error:',error.message);// For now, return all packages since we don't have category filtering in fallback\nreturn{success:true,data:fallbackPackages};}}};","map":{"version":3,"names":["apiService","fallbackPackages","packageId","packageName","price","duration","description","features","packagesService","getAllPackages","get","error","console","log","message","success","data","getPackageById","id","concat","pkg","find","p","parseInt","createPackage","packageData","post","updatePackage","put","deletePackage","delete","getPackagesByCategory","category"],"sources":["/Users/sujaljoshi/Desktop/MpT/frontend/src/services/packagesService.js"],"sourcesContent":["import apiService from './api';\n\n// Fallback data for when backend is not available\nconst fallbackPackages = [\n  {\n    packageId: 1,\n    packageName: \"Basic Package\",\n    price: 99.99,\n    duration: \"1 hour\",\n    description: \"Perfect for beginners\",\n    features: [\"Personal training session\", \"Fitness assessment\", \"Basic workout plan\"]\n  },\n  {\n    packageId: 2,\n    packageName: \"Premium Package\",\n    price: 199.99,\n    duration: \"2 hours\",\n    description: \"Great for regular fitness enthusiasts\",\n    features: [\"Extended training session\", \"Nutrition guidance\", \"Progress tracking\"]\n  },\n  {\n    packageId: 3,\n    packageName: \"Deluxe Package\",\n    price: 299.99,\n    duration: \"3 hours\",\n    description: \"Comprehensive fitness solution\",\n    features: [\"Full day program\", \"Meal planning\", \"24/7 support\"]\n  }\n];\n\nexport const packagesService = {\n  // Get all packages\n  async getAllPackages() {\n    try {\n      return await apiService.get('/packages');\n    } catch (error) {\n      console.log('Using fallback packages data due to API error:', error.message);\n      return { success: true, data: fallbackPackages };\n    }\n  },\n\n  // Get package by ID\n  async getPackageById(id) {\n    try {\n      return await apiService.get(`/packages/${id}`);\n    } catch (error) {\n      console.log('Using fallback package data due to API error:', error.message);\n      const pkg = fallbackPackages.find(p => p.packageId === parseInt(id));\n      return pkg ? { success: true, data: pkg } : { success: false, error: 'Package not found' };\n    }\n  },\n\n  // Create new package\n  async createPackage(packageData) {\n    try {\n      return await apiService.post('/packages', packageData);\n    } catch (error) {\n      console.log('Package creation failed due to API error:', error.message);\n      return { success: false, error: 'Package creation failed - using fallback mode' };\n    }\n  },\n\n  // Update package\n  async updatePackage(id, packageData) {\n    try {\n      return await apiService.put(`/packages/${id}`, packageData);\n    } catch (error) {\n      console.log('Package update failed due to API error:', error.message);\n      return { success: false, error: 'Package update failed - using fallback mode' };\n    }\n  },\n\n  // Delete package\n  async deletePackage(id) {\n    try {\n      return await apiService.delete(`/packages/${id}`);\n    } catch (error) {\n      console.log('Package deletion failed due to API error:', error.message);\n      return { success: false, error: 'Package deletion failed - using fallback mode' };\n    }\n  },\n\n  // Get packages by category\n  async getPackagesByCategory(category) {\n    try {\n      return await apiService.get(`/packages/category/${category}`);\n    } catch (error) {\n      console.log('Using fallback packages by category due to API error:', error.message);\n      // For now, return all packages since we don't have category filtering in fallback\n      return { success: true, data: fallbackPackages };\n    }\n  }\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}